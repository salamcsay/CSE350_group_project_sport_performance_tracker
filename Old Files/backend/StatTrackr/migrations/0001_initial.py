# Generated by Django 5.1.3 on 2024-11-20 21:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='StatTrackr__name_cc6927_idx'), models.Index(fields=['location'], name='StatTrackr__locatio_6edd5e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('GK', 'Goalkeeper'), ('DF', 'Defender'), ('MF', 'Midfielder'), ('FW', 'Forward')], max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='StatTrackr.club')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('assists', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('appearances', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('minutes_played', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('yellow_cards', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('red_cards', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('substitution_on', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('substitution_off', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shots', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shots_on_target', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_header', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_penalty', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_freekick', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('offsides', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('passes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('crosses', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('corners_taken', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('interceptions', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('blocks', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tackles', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('clearances', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('own_goals', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('penalties_conceded', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('aerial_battles_won', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('aerial_battles_lost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('clean_sheets', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_conceded', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('saves', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('penalties_saved', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('high_claims', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sweeper_clearances', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goal_kicks', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='StatTrackr.player')),
            ],
            options={
                'verbose_name_plural': 'Player Stats',
            },
        ),
        migrations.CreateModel(
            name='ClubStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('losses', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('yellow_cards', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('red_cards', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shots', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('shots_on_target', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_header', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_penalty', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_freekick', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_inside_box', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_from_outside_box', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('offsides', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('clean_sheets', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('goals_conceded', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('saves', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('blocks', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('interceptions', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tackles', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('clearances', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('own_goals', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('penalties_conceded', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('fouls', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('club', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='StatTrackr.club')),
            ],
            options={
                'verbose_name_plural': 'Club Stats',
                'indexes': [models.Index(fields=['wins'], name='StatTrackr__wins_135abe_idx'), models.Index(fields=['goals'], name='StatTrackr__goals_766978_idx'), models.Index(fields=['clean_sheets'], name='StatTrackr__clean_s_6cbad5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['name'], name='StatTrackr__name_9e29fc_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['position'], name='StatTrackr__positio_9bee8c_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['club'], name='StatTrackr__club_id_e4f1d0_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstats',
            index=models.Index(fields=['goals'], name='StatTrackr__goals_337256_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstats',
            index=models.Index(fields=['assists'], name='StatTrackr__assists_7a836a_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstats',
            index=models.Index(fields=['appearances'], name='StatTrackr__appeara_aa2457_idx'),
        ),
    ]
